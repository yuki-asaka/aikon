services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      - PYTHONPATH=/opt/project/backend
      - PORT=8000

  frontend:
    image: node:22
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./frontend/.env

  poetry:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./backend:/app
    working_dir: /app
    env_file:
      - ./backend/.env
    entrypoint: ["/bin/bash"]
    tty: true
    environment:
      - PYTHONPATH=/opt/project/backend

  test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    volumes:
      - ./backend:/app
    working_dir: /app
    env_file:
      - ./backend/.env
    environment:
      - PYTHONPATH=/app/app
    command: /bin/bash -c "poetry run ruff check && poetry run black --check . && poetry run pytest tests"
    tty: true
