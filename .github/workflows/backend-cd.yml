name: Deploy Backend to Cloud Run
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_tag: ${{ steps.cz.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Commitizen
        run: pip install commitizen

      - name: Bump version and generate changelog
        id: cz
        run: |
          set +e
          cz bump --changelog --yes
          CZ_EXIT_CODE=$?
          set -e
          if [ $CZ_EXIT_CODE -eq 4; then
            echo "No changes to commit, skipping version bump."
            VERSION=$(cz version --project)
            echo "NO_BUMP=1" >> $GITHUB_ENV
          elif [ $CZ_EXIT_CODE -eq 0; then
            VERSION=$(cz version --project)
            echo "NO_BUMP=0" >> $GITHUB_ENV
          else
            exit $CZ_EXIT_CODE
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        working-directory: backend

      - name: Push changes and tags
        if: env.NO_BUMP == '0'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push origin HEAD:main
          git push origin --tags
        working-directory: backend

      - name: Create GitHub Release
        if: env.NO_BUMP == '0' && hashFiles('CHANGELOG.md') != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ steps.cz.outputs.version }}"
          REPO_NAME=$(basename "$GITHUB_REPOSITORY")
          TITLE="$REPO_NAME ${{ steps.cz.outputs.version }}"
          gh release create "$TAG" \
            --repo="$GITHUB_REPOSITORY" \
            --title="$TITLE" \
            --notes-file=CHANGELOG.md
        working-directory: backend

  backend-deploy:
    needs: version-and-release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure docker for Artifact Registry
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: asia-northeast1-docker.pkg.dev/aikon-461600/cloud-run-source-deploy/aikon/aikon-backend:${{ github.sha }}

      - uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: aikon-backend
          image: asia-northeast1-docker.pkg.dev/aikon-461600/cloud-run-source-deploy/aikon/aikon-backend:${{ github.sha }}
          region: asia-northeast1

      - name: Extract issues from PR body
        id: extract-issues
        run: |
          ISSUES=$(echo '${{ github.event.pull_request.body }}' | grep -oE '#[0-9]+' | tr -d '#' | jq -R -s -c 'split("\n")[:-1]|map(tonumber)')
          echo "ISSUES=$ISSUES" >> $GITHUB_OUTPUT

  comment-issues:
    needs: [backend-deploy]
    if: needs.backend-deploy.outputs.ISSUES != '' && needs.backend-deploy.outputs.ISSUES != 'null'
    runs-on: ubuntu-latest
    steps:
      - name: Comment on issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUES: ${{ needs.backend-deploy.outputs.ISSUES }}
          REF: ${{ needs.version-and-release.outputs.new_tag }}
        run: |
          for issue in $(echo "$ISSUES" | jq '.[]'); do
            gh issue comment "$issue" --body ":rocket: Backend has been successfully deployed to Cloud Run!（$REF）"
          done
        shell: bash
